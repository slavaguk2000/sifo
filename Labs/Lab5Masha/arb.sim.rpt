Simulator report for arb
Mon Oct 28 14:39:59 2019
Quartus II Version 9.1 Build 222 10/21/2009 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. Simulator Summary
  3. Simulator Settings
  4. Simulation Waveforms
  5. Coverage Summary
  6. Complete 1/0-Value Coverage
  7. Missing 1-Value Coverage
  8. Missing 0-Value Coverage
  9. Simulator INI Usage
 10. Simulator Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+--------------------------------------------+
; Simulator Summary                          ;
+-----------------------------+--------------+
; Type                        ; Value        ;
+-----------------------------+--------------+
; Simulation Start Time       ; 0 ps         ;
; Simulation End Time         ; 1.0 us       ;
; Simulation Netlist Size     ; 150 nodes    ;
; Simulation Coverage         ;      89.76 % ;
; Total Number of Transitions ; 8379         ;
; Simulation Breakpoints      ; 0            ;
; Family                      ; Stratix II   ;
+-----------------------------+--------------+


+-------------------------------------------------------------------------------------------------------------------------+
; Simulator Settings                                                                                                      ;
+--------------------------------------------------------------------------------------------+------------+---------------+
; Option                                                                                     ; Setting    ; Default Value ;
+--------------------------------------------------------------------------------------------+------------+---------------+
; Simulation mode                                                                            ; Functional ; Timing        ;
; Start time                                                                                 ; 0 ns       ; 0 ns          ;
; Simulation results format                                                                  ; CVWF       ;               ;
; Vector input source                                                                        ; arbbtr.vwf ;               ;
; Add pins automatically to simulation output waveforms                                      ; On         ; On            ;
; Check outputs                                                                              ; Off        ; Off           ;
; Report simulation coverage                                                                 ; On         ; On            ;
; Display complete 1/0 value coverage report                                                 ; On         ; On            ;
; Display missing 1-value coverage report                                                    ; On         ; On            ;
; Display missing 0-value coverage report                                                    ; On         ; On            ;
; Detect setup and hold time violations                                                      ; Off        ; Off           ;
; Detect glitches                                                                            ; Off        ; Off           ;
; Disable timing delays in Timing Simulation                                                 ; Off        ; Off           ;
; Generate Signal Activity File                                                              ; Off        ; Off           ;
; Generate VCD File for PowerPlay Power Analyzer                                             ; Off        ; Off           ;
; Group bus channels in simulation results                                                   ; Off        ; Off           ;
; Preserve fewer signal transitions to reduce memory requirements                            ; On         ; On            ;
; Trigger vector comparison with the specified mode                                          ; INPUT_EDGE ; INPUT_EDGE    ;
; Disable setup and hold time violations detection in input registers of bi-directional pins ; Off        ; Off           ;
; Overwrite Waveform Inputs With Simulation Outputs                                          ; On         ;               ;
; Perform Glitch Filtering in Timing Simulation                                              ; Auto       ; Auto          ;
+--------------------------------------------------------------------------------------------+------------+---------------+


+----------------------+
; Simulation Waveforms ;
+----------------------+
Waveform report data cannot be output to ASCII.
Please use Quartus II to view the waveform report data.


+--------------------------------------------------------------------+
; Coverage Summary                                                   ;
+-----------------------------------------------------+--------------+
; Type                                                ; Value        ;
+-----------------------------------------------------+--------------+
; Total coverage as a percentage                      ;      89.76 % ;
; Total nodes checked                                 ; 150          ;
; Total output ports checked                          ; 166          ;
; Total output ports with complete 1/0-value coverage ; 149          ;
; Total output ports with no 1/0-value coverage       ; 1            ;
; Total output ports with no 1-value coverage         ; 8            ;
; Total output ports with no 0-value coverage         ; 10           ;
+-----------------------------------------------------+--------------+


The following table displays output ports that toggle between 1 and 0 during simulation.
+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Complete 1/0-Value Coverage                                                                                                                                                                                                                                           ;
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------+------------------+
; Node Name                                                                                                              ; Output Port Name                                                                                                          ; Output Port Type ;
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------+------------------+
; |arbbtr|slave0[3]                                                                                                      ; |arbbtr|slave0[3]                                                                                                         ; pin_out          ;
; |arbbtr|slave0[2]                                                                                                      ; |arbbtr|slave0[2]                                                                                                         ; pin_out          ;
; |arbbtr|slave0[1]                                                                                                      ; |arbbtr|slave0[1]                                                                                                         ; pin_out          ;
; |arbbtr|slave0[0]                                                                                                      ; |arbbtr|slave0[0]                                                                                                         ; pin_out          ;
; |arbbtr|data~0                                                                                                         ; |arbbtr|data~0                                                                                                            ; out0             ;
; |arbbtr|data~1                                                                                                         ; |arbbtr|data~1                                                                                                            ; out0             ;
; |arbbtr|clock                                                                                                          ; |arbbtr|clock                                                                                                             ; out              ;
; |arbbtr|gdfx_temp0[3]                                                                                                  ; |arbbtr|gdfx_temp0[3]                                                                                                     ; out0             ;
; |arbbtr|gdfx_temp0[2]                                                                                                  ; |arbbtr|gdfx_temp0[2]                                                                                                     ; out0             ;
; |arbbtr|gdfx_temp0[1]                                                                                                  ; |arbbtr|gdfx_temp0[1]                                                                                                     ; out0             ;
; |arbbtr|gdfx_temp0[0]                                                                                                  ; |arbbtr|gdfx_temp0[0]                                                                                                     ; out0             ;
; |arbbtr|slave1[3]                                                                                                      ; |arbbtr|slave1[3]                                                                                                         ; pin_out          ;
; |arbbtr|slave1[2]                                                                                                      ; |arbbtr|slave1[2]                                                                                                         ; pin_out          ;
; |arbbtr|slave1[1]                                                                                                      ; |arbbtr|slave1[1]                                                                                                         ; pin_out          ;
; |arbbtr|slave1[0]                                                                                                      ; |arbbtr|slave1[0]                                                                                                         ; pin_out          ;
; |arbbtr|slave2[3]                                                                                                      ; |arbbtr|slave2[3]                                                                                                         ; pin_out          ;
; |arbbtr|slave2[2]                                                                                                      ; |arbbtr|slave2[2]                                                                                                         ; pin_out          ;
; |arbbtr|slave2[1]                                                                                                      ; |arbbtr|slave2[1]                                                                                                         ; pin_out          ;
; |arbbtr|slave2[0]                                                                                                      ; |arbbtr|slave2[0]                                                                                                         ; pin_out          ;
; |arbbtr|slave3[3]                                                                                                      ; |arbbtr|slave3[3]                                                                                                         ; pin_out          ;
; |arbbtr|slave3[2]                                                                                                      ; |arbbtr|slave3[2]                                                                                                         ; pin_out          ;
; |arbbtr|slave3[1]                                                                                                      ; |arbbtr|slave3[1]                                                                                                         ; pin_out          ;
; |arbbtr|slave3[0]                                                                                                      ; |arbbtr|slave3[0]                                                                                                         ; pin_out          ;
; |arbbtr|lpm_bustri2:inst14|lpm_bustri:lpm_bustri_component|dout[3]                                                     ; |arbbtr|lpm_bustri2:inst14|lpm_bustri:lpm_bustri_component|dout[3]                                                        ; out              ;
; |arbbtr|lpm_bustri2:inst14|lpm_bustri:lpm_bustri_component|dout[2]                                                     ; |arbbtr|lpm_bustri2:inst14|lpm_bustri:lpm_bustri_component|dout[2]                                                        ; out              ;
; |arbbtr|lpm_bustri2:inst14|lpm_bustri:lpm_bustri_component|dout[1]                                                     ; |arbbtr|lpm_bustri2:inst14|lpm_bustri:lpm_bustri_component|dout[1]                                                        ; out              ;
; |arbbtr|lpm_bustri2:inst14|lpm_bustri:lpm_bustri_component|dout[0]                                                     ; |arbbtr|lpm_bustri2:inst14|lpm_bustri:lpm_bustri_component|dout[0]                                                        ; out              ;
; |arbbtr|lpm_bustri2:inst13|lpm_bustri:lpm_bustri_component|dout[3]                                                     ; |arbbtr|lpm_bustri2:inst13|lpm_bustri:lpm_bustri_component|dout[3]                                                        ; out              ;
; |arbbtr|lpm_bustri2:inst13|lpm_bustri:lpm_bustri_component|dout[2]                                                     ; |arbbtr|lpm_bustri2:inst13|lpm_bustri:lpm_bustri_component|dout[2]                                                        ; out              ;
; |arbbtr|lpm_bustri2:inst13|lpm_bustri:lpm_bustri_component|dout[1]                                                     ; |arbbtr|lpm_bustri2:inst13|lpm_bustri:lpm_bustri_component|dout[1]                                                        ; out              ;
; |arbbtr|lpm_bustri2:inst13|lpm_bustri:lpm_bustri_component|dout[0]                                                     ; |arbbtr|lpm_bustri2:inst13|lpm_bustri:lpm_bustri_component|dout[0]                                                        ; out              ;
; |arbbtr|lpm_bustri2:inst12|lpm_bustri:lpm_bustri_component|dout[3]                                                     ; |arbbtr|lpm_bustri2:inst12|lpm_bustri:lpm_bustri_component|dout[3]                                                        ; out              ;
; |arbbtr|lpm_bustri2:inst12|lpm_bustri:lpm_bustri_component|dout[2]                                                     ; |arbbtr|lpm_bustri2:inst12|lpm_bustri:lpm_bustri_component|dout[2]                                                        ; out              ;
; |arbbtr|lpm_bustri2:inst12|lpm_bustri:lpm_bustri_component|dout[1]                                                     ; |arbbtr|lpm_bustri2:inst12|lpm_bustri:lpm_bustri_component|dout[1]                                                        ; out              ;
; |arbbtr|lpm_bustri2:inst12|lpm_bustri:lpm_bustri_component|dout[0]                                                     ; |arbbtr|lpm_bustri2:inst12|lpm_bustri:lpm_bustri_component|dout[0]                                                        ; out              ;
; |arbbtr|master:inst4|inst8                                                                                             ; |arbbtr|master:inst4|inst8                                                                                                ; regout           ;
; |arbbtr|master:inst4|inst7                                                                                             ; |arbbtr|master:inst4|inst7                                                                                                ; out0             ;
; |arbbtr|master:inst4|inst6                                                                                             ; |arbbtr|master:inst4|inst6                                                                                                ; out0             ;
; |arbbtr|master:inst4|inst23                                                                                            ; |arbbtr|master:inst4|inst23                                                                                               ; out0             ;
; |arbbtr|master:inst4|lpm_bustri1:inst20|lpm_bustri:lpm_bustri_component|dout[1]                                        ; |arbbtr|master:inst4|lpm_bustri1:inst20|lpm_bustri:lpm_bustri_component|dout[1]                                           ; out              ;
; |arbbtr|master:inst4|lpm_bustri1:inst20|lpm_bustri:lpm_bustri_component|dout[0]                                        ; |arbbtr|master:inst4|lpm_bustri1:inst20|lpm_bustri:lpm_bustri_component|dout[0]                                           ; out              ;
; |arbbtr|master:inst4|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita0    ; |arbbtr|master:inst4|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita0       ; sumout           ;
; |arbbtr|master:inst4|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita0    ; |arbbtr|master:inst4|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita0~COUT  ; cout             ;
; |arbbtr|master:inst4|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita1    ; |arbbtr|master:inst4|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita1       ; sumout           ;
; |arbbtr|master:inst4|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita1    ; |arbbtr|master:inst4|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita1~COUT  ; cout             ;
; |arbbtr|master:inst4|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita2    ; |arbbtr|master:inst4|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita2       ; sumout           ;
; |arbbtr|master:inst4|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita2    ; |arbbtr|master:inst4|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita2~COUT  ; cout             ;
; |arbbtr|master:inst4|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita3    ; |arbbtr|master:inst4|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita3       ; sumout           ;
; |arbbtr|master:inst4|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_reg_bit1a[2]  ; |arbbtr|master:inst4|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|safe_q[2]                ; regout           ;
; |arbbtr|master:inst4|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_reg_bit1a[1]  ; |arbbtr|master:inst4|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|safe_q[1]                ; regout           ;
; |arbbtr|master:inst4|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_reg_bit1a[0]  ; |arbbtr|master:inst4|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|safe_q[0]                ; regout           ;
; |arbbtr|master:inst4|lpm_compare0:inst1|lpm_compare:lpm_compare_component|cmpr_big:auto_generated|aneb_result_wire[0]  ; |arbbtr|master:inst4|lpm_compare0:inst1|lpm_compare:lpm_compare_component|cmpr_big:auto_generated|aneb_result_wire[0]     ; out0             ;
; |arbbtr|master:inst4|lpm_compare0:inst1|lpm_compare:lpm_compare_component|cmpr_big:auto_generated|data_wire[1]         ; |arbbtr|master:inst4|lpm_compare0:inst1|lpm_compare:lpm_compare_component|cmpr_big:auto_generated|data_wire[1]            ; out0             ;
; |arbbtr|master:inst4|lpm_compare0:inst1|lpm_compare:lpm_compare_component|cmpr_big:auto_generated|data_wire[0]         ; |arbbtr|master:inst4|lpm_compare0:inst1|lpm_compare:lpm_compare_component|cmpr_big:auto_generated|data_wire[0]            ; out0             ;
; |arbbtr|master:inst4|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|counter_comb_bita0   ; |arbbtr|master:inst4|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|counter_comb_bita0      ; sumout           ;
; |arbbtr|master:inst4|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|counter_comb_bita0   ; |arbbtr|master:inst4|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|counter_comb_bita0~COUT ; cout             ;
; |arbbtr|master:inst4|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|counter_comb_bita1   ; |arbbtr|master:inst4|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|counter_comb_bita1      ; sumout           ;
; |arbbtr|master:inst4|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|counter_reg_bit1a[1] ; |arbbtr|master:inst4|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|safe_q[1]               ; regout           ;
; |arbbtr|master:inst4|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|counter_reg_bit1a[0] ; |arbbtr|master:inst4|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|safe_q[0]               ; regout           ;
; |arbbtr|master:inst4|lpm_decode0:inst10|lpm_decode:lpm_decode_component|decode_p7f:auto_generated|w_anode1w[2]         ; |arbbtr|master:inst4|lpm_decode0:inst10|lpm_decode:lpm_decode_component|decode_p7f:auto_generated|w_anode1w[2]            ; out0             ;
; |arbbtr|master:inst3|inst22                                                                                            ; |arbbtr|master:inst3|inst22                                                                                               ; out0             ;
; |arbbtr|master:inst3|inst8                                                                                             ; |arbbtr|master:inst3|inst8                                                                                                ; regout           ;
; |arbbtr|master:inst3|inst7                                                                                             ; |arbbtr|master:inst3|inst7                                                                                                ; out0             ;
; |arbbtr|master:inst3|inst6                                                                                             ; |arbbtr|master:inst3|inst6                                                                                                ; out0             ;
; |arbbtr|master:inst3|inst23                                                                                            ; |arbbtr|master:inst3|inst23                                                                                               ; out0             ;
; |arbbtr|master:inst3|lpm_bustri1:inst20|lpm_bustri:lpm_bustri_component|dout[1]                                        ; |arbbtr|master:inst3|lpm_bustri1:inst20|lpm_bustri:lpm_bustri_component|dout[1]                                           ; out              ;
; |arbbtr|master:inst3|lpm_bustri1:inst20|lpm_bustri:lpm_bustri_component|dout[0]                                        ; |arbbtr|master:inst3|lpm_bustri1:inst20|lpm_bustri:lpm_bustri_component|dout[0]                                           ; out              ;
; |arbbtr|master:inst3|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita0    ; |arbbtr|master:inst3|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita0       ; sumout           ;
; |arbbtr|master:inst3|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita0    ; |arbbtr|master:inst3|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita0~COUT  ; cout             ;
; |arbbtr|master:inst3|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita1    ; |arbbtr|master:inst3|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita1       ; sumout           ;
; |arbbtr|master:inst3|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita1    ; |arbbtr|master:inst3|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita1~COUT  ; cout             ;
; |arbbtr|master:inst3|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita2    ; |arbbtr|master:inst3|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita2       ; sumout           ;
; |arbbtr|master:inst3|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita2    ; |arbbtr|master:inst3|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita2~COUT  ; cout             ;
; |arbbtr|master:inst3|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita3    ; |arbbtr|master:inst3|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita3       ; sumout           ;
; |arbbtr|master:inst3|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_reg_bit1a[3]  ; |arbbtr|master:inst3|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|safe_q[3]                ; regout           ;
; |arbbtr|master:inst3|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_reg_bit1a[2]  ; |arbbtr|master:inst3|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|safe_q[2]                ; regout           ;
; |arbbtr|master:inst3|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_reg_bit1a[1]  ; |arbbtr|master:inst3|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|safe_q[1]                ; regout           ;
; |arbbtr|master:inst3|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_reg_bit1a[0]  ; |arbbtr|master:inst3|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|safe_q[0]                ; regout           ;
; |arbbtr|master:inst3|lpm_compare0:inst1|lpm_compare:lpm_compare_component|cmpr_big:auto_generated|aneb_result_wire[0]  ; |arbbtr|master:inst3|lpm_compare0:inst1|lpm_compare:lpm_compare_component|cmpr_big:auto_generated|aneb_result_wire[0]     ; out0             ;
; |arbbtr|master:inst3|lpm_compare0:inst1|lpm_compare:lpm_compare_component|cmpr_big:auto_generated|data_wire[1]         ; |arbbtr|master:inst3|lpm_compare0:inst1|lpm_compare:lpm_compare_component|cmpr_big:auto_generated|data_wire[1]            ; out0             ;
; |arbbtr|master:inst3|lpm_compare0:inst1|lpm_compare:lpm_compare_component|cmpr_big:auto_generated|data_wire[0]         ; |arbbtr|master:inst3|lpm_compare0:inst1|lpm_compare:lpm_compare_component|cmpr_big:auto_generated|data_wire[0]            ; out0             ;
; |arbbtr|master:inst3|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|counter_comb_bita0   ; |arbbtr|master:inst3|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|counter_comb_bita0      ; sumout           ;
; |arbbtr|master:inst3|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|counter_comb_bita0   ; |arbbtr|master:inst3|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|counter_comb_bita0~COUT ; cout             ;
; |arbbtr|master:inst3|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|counter_comb_bita1   ; |arbbtr|master:inst3|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|counter_comb_bita1      ; sumout           ;
; |arbbtr|master:inst3|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|counter_reg_bit1a[1] ; |arbbtr|master:inst3|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|safe_q[1]               ; regout           ;
; |arbbtr|master:inst3|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|counter_reg_bit1a[0] ; |arbbtr|master:inst3|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|safe_q[0]               ; regout           ;
; |arbbtr|master:inst3|lpm_decode0:inst10|lpm_decode:lpm_decode_component|decode_p7f:auto_generated|w_anode1w[2]         ; |arbbtr|master:inst3|lpm_decode0:inst10|lpm_decode:lpm_decode_component|decode_p7f:auto_generated|w_anode1w[2]            ; out0             ;
; |arbbtr|master:inst2|inst22                                                                                            ; |arbbtr|master:inst2|inst22                                                                                               ; out0             ;
; |arbbtr|master:inst2|inst8                                                                                             ; |arbbtr|master:inst2|inst8                                                                                                ; regout           ;
; |arbbtr|master:inst2|inst7                                                                                             ; |arbbtr|master:inst2|inst7                                                                                                ; out0             ;
; |arbbtr|master:inst2|inst6                                                                                             ; |arbbtr|master:inst2|inst6                                                                                                ; out0             ;
; |arbbtr|master:inst2|inst23                                                                                            ; |arbbtr|master:inst2|inst23                                                                                               ; out0             ;
; |arbbtr|master:inst2|lpm_bustri1:inst20|lpm_bustri:lpm_bustri_component|dout[1]                                        ; |arbbtr|master:inst2|lpm_bustri1:inst20|lpm_bustri:lpm_bustri_component|dout[1]                                           ; out              ;
; |arbbtr|master:inst2|lpm_bustri1:inst20|lpm_bustri:lpm_bustri_component|dout[0]                                        ; |arbbtr|master:inst2|lpm_bustri1:inst20|lpm_bustri:lpm_bustri_component|dout[0]                                           ; out              ;
; |arbbtr|master:inst2|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita0    ; |arbbtr|master:inst2|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita0       ; sumout           ;
; |arbbtr|master:inst2|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita0    ; |arbbtr|master:inst2|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita0~COUT  ; cout             ;
; |arbbtr|master:inst2|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita1    ; |arbbtr|master:inst2|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita1       ; sumout           ;
; |arbbtr|master:inst2|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita1    ; |arbbtr|master:inst2|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita1~COUT  ; cout             ;
; |arbbtr|master:inst2|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita2    ; |arbbtr|master:inst2|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita2       ; sumout           ;
; |arbbtr|master:inst2|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita2    ; |arbbtr|master:inst2|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita2~COUT  ; cout             ;
; |arbbtr|master:inst2|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita3    ; |arbbtr|master:inst2|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita3       ; sumout           ;
; |arbbtr|master:inst2|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_reg_bit1a[3]  ; |arbbtr|master:inst2|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|safe_q[3]                ; regout           ;
; |arbbtr|master:inst2|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_reg_bit1a[2]  ; |arbbtr|master:inst2|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|safe_q[2]                ; regout           ;
; |arbbtr|master:inst2|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_reg_bit1a[1]  ; |arbbtr|master:inst2|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|safe_q[1]                ; regout           ;
; |arbbtr|master:inst2|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_reg_bit1a[0]  ; |arbbtr|master:inst2|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|safe_q[0]                ; regout           ;
; |arbbtr|master:inst2|lpm_compare0:inst1|lpm_compare:lpm_compare_component|cmpr_big:auto_generated|aneb_result_wire[0]  ; |arbbtr|master:inst2|lpm_compare0:inst1|lpm_compare:lpm_compare_component|cmpr_big:auto_generated|aneb_result_wire[0]     ; out0             ;
; |arbbtr|master:inst2|lpm_compare0:inst1|lpm_compare:lpm_compare_component|cmpr_big:auto_generated|data_wire[1]         ; |arbbtr|master:inst2|lpm_compare0:inst1|lpm_compare:lpm_compare_component|cmpr_big:auto_generated|data_wire[1]            ; out0             ;
; |arbbtr|master:inst2|lpm_compare0:inst1|lpm_compare:lpm_compare_component|cmpr_big:auto_generated|data_wire[0]         ; |arbbtr|master:inst2|lpm_compare0:inst1|lpm_compare:lpm_compare_component|cmpr_big:auto_generated|data_wire[0]            ; out0             ;
; |arbbtr|master:inst2|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|counter_comb_bita0   ; |arbbtr|master:inst2|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|counter_comb_bita0      ; sumout           ;
; |arbbtr|master:inst2|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|counter_comb_bita0   ; |arbbtr|master:inst2|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|counter_comb_bita0~COUT ; cout             ;
; |arbbtr|master:inst2|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|counter_comb_bita1   ; |arbbtr|master:inst2|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|counter_comb_bita1      ; sumout           ;
; |arbbtr|master:inst2|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|counter_reg_bit1a[1] ; |arbbtr|master:inst2|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|safe_q[1]               ; regout           ;
; |arbbtr|master:inst2|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|counter_reg_bit1a[0] ; |arbbtr|master:inst2|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|safe_q[0]               ; regout           ;
; |arbbtr|master:inst2|lpm_decode0:inst10|lpm_decode:lpm_decode_component|decode_p7f:auto_generated|w_anode1w[2]         ; |arbbtr|master:inst2|lpm_decode0:inst10|lpm_decode:lpm_decode_component|decode_p7f:auto_generated|w_anode1w[2]            ; out0             ;
; |arbbtr|master:inst|inst22                                                                                             ; |arbbtr|master:inst|inst22                                                                                                ; out0             ;
; |arbbtr|master:inst|inst8                                                                                              ; |arbbtr|master:inst|inst8                                                                                                 ; regout           ;
; |arbbtr|master:inst|inst7                                                                                              ; |arbbtr|master:inst|inst7                                                                                                 ; out0             ;
; |arbbtr|master:inst|inst6                                                                                              ; |arbbtr|master:inst|inst6                                                                                                 ; out0             ;
; |arbbtr|master:inst|inst23                                                                                             ; |arbbtr|master:inst|inst23                                                                                                ; out0             ;
; |arbbtr|master:inst|lpm_bustri1:inst20|lpm_bustri:lpm_bustri_component|dout[1]                                         ; |arbbtr|master:inst|lpm_bustri1:inst20|lpm_bustri:lpm_bustri_component|dout[1]                                            ; out              ;
; |arbbtr|master:inst|lpm_bustri1:inst20|lpm_bustri:lpm_bustri_component|dout[0]                                         ; |arbbtr|master:inst|lpm_bustri1:inst20|lpm_bustri:lpm_bustri_component|dout[0]                                            ; out              ;
; |arbbtr|master:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita0     ; |arbbtr|master:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita0        ; sumout           ;
; |arbbtr|master:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita0     ; |arbbtr|master:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita0~COUT   ; cout             ;
; |arbbtr|master:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita1     ; |arbbtr|master:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita1        ; sumout           ;
; |arbbtr|master:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita1     ; |arbbtr|master:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita1~COUT   ; cout             ;
; |arbbtr|master:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita2     ; |arbbtr|master:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita2        ; sumout           ;
; |arbbtr|master:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita2     ; |arbbtr|master:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita2~COUT   ; cout             ;
; |arbbtr|master:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita3     ; |arbbtr|master:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_comb_bita3        ; sumout           ;
; |arbbtr|master:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_reg_bit1a[3]   ; |arbbtr|master:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|safe_q[3]                 ; regout           ;
; |arbbtr|master:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_reg_bit1a[2]   ; |arbbtr|master:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|safe_q[2]                 ; regout           ;
; |arbbtr|master:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_reg_bit1a[1]   ; |arbbtr|master:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|safe_q[1]                 ; regout           ;
; |arbbtr|master:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_reg_bit1a[0]   ; |arbbtr|master:inst|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|safe_q[0]                 ; regout           ;
; |arbbtr|master:inst|lpm_compare0:inst1|lpm_compare:lpm_compare_component|cmpr_big:auto_generated|aneb_result_wire[0]   ; |arbbtr|master:inst|lpm_compare0:inst1|lpm_compare:lpm_compare_component|cmpr_big:auto_generated|aneb_result_wire[0]      ; out0             ;
; |arbbtr|master:inst|lpm_compare0:inst1|lpm_compare:lpm_compare_component|cmpr_big:auto_generated|data_wire[1]          ; |arbbtr|master:inst|lpm_compare0:inst1|lpm_compare:lpm_compare_component|cmpr_big:auto_generated|data_wire[1]             ; out0             ;
; |arbbtr|master:inst|lpm_compare0:inst1|lpm_compare:lpm_compare_component|cmpr_big:auto_generated|data_wire[0]          ; |arbbtr|master:inst|lpm_compare0:inst1|lpm_compare:lpm_compare_component|cmpr_big:auto_generated|data_wire[0]             ; out0             ;
; |arbbtr|master:inst|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|counter_comb_bita0    ; |arbbtr|master:inst|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|counter_comb_bita0       ; sumout           ;
; |arbbtr|master:inst|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|counter_comb_bita0    ; |arbbtr|master:inst|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|counter_comb_bita0~COUT  ; cout             ;
; |arbbtr|master:inst|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|counter_comb_bita1    ; |arbbtr|master:inst|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|counter_comb_bita1       ; sumout           ;
; |arbbtr|master:inst|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|counter_reg_bit1a[1]  ; |arbbtr|master:inst|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|safe_q[1]                ; regout           ;
; |arbbtr|master:inst|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|counter_reg_bit1a[0]  ; |arbbtr|master:inst|lpm_counter1:inst4|lpm_counter:lpm_counter_component|cntr_olh:auto_generated|safe_q[0]                ; regout           ;
; |arbbtr|master:inst|lpm_decode0:inst10|lpm_decode:lpm_decode_component|decode_p7f:auto_generated|w_anode1w[2]          ; |arbbtr|master:inst|lpm_decode0:inst10|lpm_decode:lpm_decode_component|decode_p7f:auto_generated|w_anode1w[2]             ; out0             ;
; |arbbtr|lpm_decode1:inst5|lpm_decode:lpm_decode_component|decode_p7f:auto_generated|w_anode15w[2]                      ; |arbbtr|lpm_decode1:inst5|lpm_decode:lpm_decode_component|decode_p7f:auto_generated|w_anode15w[2]                         ; out0             ;
; |arbbtr|lpm_decode1:inst5|lpm_decode:lpm_decode_component|decode_p7f:auto_generated|w_anode1w[2]                       ; |arbbtr|lpm_decode1:inst5|lpm_decode:lpm_decode_component|decode_p7f:auto_generated|w_anode1w[2]                          ; out0             ;
; |arbbtr|lpm_decode1:inst5|lpm_decode:lpm_decode_component|decode_p7f:auto_generated|w_anode24w[2]                      ; |arbbtr|lpm_decode1:inst5|lpm_decode:lpm_decode_component|decode_p7f:auto_generated|w_anode24w[2]                         ; out0             ;
; |arbbtr|lpm_decode1:inst5|lpm_decode:lpm_decode_component|decode_p7f:auto_generated|w_anode33w[2]                      ; |arbbtr|lpm_decode1:inst5|lpm_decode:lpm_decode_component|decode_p7f:auto_generated|w_anode33w[2]                         ; out0             ;
; |arbbtr|lpm_bustri2:inst11|lpm_bustri:lpm_bustri_component|dout[3]                                                     ; |arbbtr|lpm_bustri2:inst11|lpm_bustri:lpm_bustri_component|dout[3]                                                        ; out              ;
; |arbbtr|lpm_bustri2:inst11|lpm_bustri:lpm_bustri_component|dout[2]                                                     ; |arbbtr|lpm_bustri2:inst11|lpm_bustri:lpm_bustri_component|dout[2]                                                        ; out              ;
; |arbbtr|lpm_bustri2:inst11|lpm_bustri:lpm_bustri_component|dout[1]                                                     ; |arbbtr|lpm_bustri2:inst11|lpm_bustri:lpm_bustri_component|dout[1]                                                        ; out              ;
; |arbbtr|lpm_bustri2:inst11|lpm_bustri:lpm_bustri_component|dout[0]                                                     ; |arbbtr|lpm_bustri2:inst11|lpm_bustri:lpm_bustri_component|dout[0]                                                        ; out              ;
+------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------+------------------+


The following table displays output ports that do not toggle to 1 during simulation.
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Missing 1-Value Coverage                                                                                                                                                                                                                              ;
+-----------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------+------------------+
; Node Name                                                                                                             ; Output Port Name                                                                                           ; Output Port Type ;
+-----------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------+------------------+
; |arbbtr|master:inst4|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[3]                                       ; |arbbtr|master:inst4|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[3]                            ; out              ;
; |arbbtr|master:inst4|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_reg_bit1a[3] ; |arbbtr|master:inst4|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|safe_q[3] ; regout           ;
; |arbbtr|master:inst3|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[1]                                       ; |arbbtr|master:inst3|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[1]                            ; out              ;
; |arbbtr|master:inst2|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[2]                                       ; |arbbtr|master:inst2|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[2]                            ; out              ;
; |arbbtr|master:inst2|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[1]                                       ; |arbbtr|master:inst2|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[1]                            ; out              ;
; |arbbtr|master:inst|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[2]                                        ; |arbbtr|master:inst|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[2]                             ; out              ;
; |arbbtr|master:inst|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[1]                                        ; |arbbtr|master:inst|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[1]                             ; out              ;
; |arbbtr|master:inst|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[0]                                        ; |arbbtr|master:inst|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[0]                             ; out              ;
+-----------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------+------------------+


The following table displays output ports that do not toggle to 0 during simulation.
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Missing 0-Value Coverage                                                                                                                                                                                                                              ;
+-----------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------+------------------+
; Node Name                                                                                                             ; Output Port Name                                                                                           ; Output Port Type ;
+-----------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------+------------------+
; |arbbtr|master:inst4|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[2]                                       ; |arbbtr|master:inst4|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[2]                            ; out              ;
; |arbbtr|master:inst4|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[1]                                       ; |arbbtr|master:inst4|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[1]                            ; out              ;
; |arbbtr|master:inst4|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[0]                                       ; |arbbtr|master:inst4|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[0]                            ; out              ;
; |arbbtr|master:inst4|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|counter_reg_bit1a[3] ; |arbbtr|master:inst4|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_e4i:auto_generated|safe_q[3] ; regout           ;
; |arbbtr|master:inst3|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[3]                                       ; |arbbtr|master:inst3|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[3]                            ; out              ;
; |arbbtr|master:inst3|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[2]                                       ; |arbbtr|master:inst3|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[2]                            ; out              ;
; |arbbtr|master:inst3|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[0]                                       ; |arbbtr|master:inst3|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[0]                            ; out              ;
; |arbbtr|master:inst2|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[3]                                       ; |arbbtr|master:inst2|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[3]                            ; out              ;
; |arbbtr|master:inst2|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[0]                                       ; |arbbtr|master:inst2|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[0]                            ; out              ;
; |arbbtr|master:inst|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[3]                                        ; |arbbtr|master:inst|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[3]                             ; out              ;
+-----------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------+------------------+


+---------------------+
; Simulator INI Usage ;
+--------+------------+
; Option ; Usage      ;
+--------+------------+


+--------------------+
; Simulator Messages ;
+--------------------+
Info: *******************************************************************
Info: Running Quartus II Simulator
    Info: Version 9.1 Build 222 10/21/2009 SJ Web Edition
    Info: Processing started: Mon Oct 28 14:39:58 2019
Info: Command: quartus_sim --read_settings_files=on --write_settings_files=off arb -c arb
Info: Using vector source file "D:/UNIVER/5 sem/SiFO/sifo/Labs/Lab5Masha/arbbtr.vwf"
Info: Overwriting simulation input file with simulation results
    Info: A backup of arbbtr.vwf called arb.sim_ori.vwf has been created in the db folder
Info: Option to preserve fewer signal transitions to reduce memory requirements is enabled
    Info: Simulation has been partitioned into sub-simulations according to the maximum transition count determined by the engine. Transitions from memory will be flushed out to disk at the end of each sub-simulation to reduce memory requirements.
Info: Simulation partitioned into 1 sub-simulations
Info: Simulation coverage is      89.76 %
Info: Number of transitions in simulation is 8379
Info: Vector file arbbtr.vwf is saved in VWF text format. You can compress it into CVWF format in order to reduce file size. For more details please refer to the Quartus II Help.
Info: Quartus II Simulator was successful. 0 errors, 0 warnings
    Info: Peak virtual memory: 158 megabytes
    Info: Processing ended: Mon Oct 28 14:39:59 2019
    Info: Elapsed time: 00:00:01
    Info: Total CPU time (on all processors): 00:00:01


