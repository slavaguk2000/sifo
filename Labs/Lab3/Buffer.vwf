/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("inputData")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("inputData[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inputData";
}

SIGNAL("inputData[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inputData";
}

SIGNAL("inputData[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inputData";
}

SIGNAL("inputData[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inputData";
}

SIGNAL("inputData[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inputData";
}

SIGNAL("inputData[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inputData";
}

SIGNAL("inputData[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inputData";
}

SIGNAL("inputData[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inputData";
}

SIGNAL("data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("data[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("data[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("data[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("data[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("data[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("data[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("data[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("data[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("addr")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("addr[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "addr";
}

SIGNAL("addr[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "addr";
}

SIGNAL("addr[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "addr";
}

SIGNAL("set")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("enableWrite")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ClearCounter")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("sizeOfBuffer")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("sizeOfBuffer[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "sizeOfBuffer";
}

SIGNAL("sizeOfBuffer[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "sizeOfBuffer";
}

SIGNAL("sizeOfBuffer[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "sizeOfBuffer";
}

SIGNAL("read/write")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("buf0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buf0[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "buf0";
}

SIGNAL("buf0[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "buf0";
}

SIGNAL("buf0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "buf0";
}

SIGNAL("buf0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "buf0";
}

SIGNAL("buf0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "buf0";
}

SIGNAL("buf0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "buf0";
}

SIGNAL("buf0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "buf0";
}

SIGNAL("buf0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "buf0";
}

SIGNAL("buf1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buf1[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "buf1";
}

SIGNAL("buf1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "buf1";
}

SIGNAL("buf1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "buf1";
}

SIGNAL("buf1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "buf1";
}

SIGNAL("buf1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "buf1";
}

SIGNAL("buf1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "buf1";
}

SIGNAL("buf1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "buf1";
}

SIGNAL("buf1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "buf1";
}

SIGNAL("buf2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buf2[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "buf2";
}

SIGNAL("buf2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "buf2";
}

SIGNAL("buf2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "buf2";
}

SIGNAL("buf2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "buf2";
}

SIGNAL("buf2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "buf2";
}

SIGNAL("buf2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "buf2";
}

SIGNAL("buf2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "buf2";
}

SIGNAL("buf2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "buf2";
}

SIGNAL("addr_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("addr_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "addr_out";
}

SIGNAL("addr_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "addr_out";
}

SIGNAL("addr_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "addr_out";
}

SIGNAL("reset_to_Z")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 21;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		NODE
		{
			REPEAT = 77;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("inputData[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 210.0;
		LEVEL 0 FOR 790.0;
	}
}

TRANSITION_LIST("inputData[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 210.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 740.0;
	}
}

TRANSITION_LIST("inputData[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 210.0;
		LEVEL 0 FOR 790.0;
	}
}

TRANSITION_LIST("inputData[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 210.0;
		LEVEL 0 FOR 790.0;
	}
}

TRANSITION_LIST("inputData[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 210.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 750.0;
	}
}

TRANSITION_LIST("inputData[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 210.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 740.0;
	}
}

TRANSITION_LIST("inputData[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 210.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 760.0;
	}
}

TRANSITION_LIST("inputData[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 210.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 750.0;
	}
}

TRANSITION_LIST("data[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 40.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 40.0;
		LEVEL Z FOR 210.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 600.0;
	}
}

TRANSITION_LIST("data[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 40.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 40.0;
		LEVEL Z FOR 210.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 600.0;
	}
}

TRANSITION_LIST("data[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 40.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 40.0;
		LEVEL Z FOR 210.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 600.0;
	}
}

TRANSITION_LIST("data[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 40.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 40.0;
		LEVEL Z FOR 210.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 600.0;
	}
}

TRANSITION_LIST("data[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 40.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 40.0;
		LEVEL Z FOR 210.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 600.0;
	}
}

TRANSITION_LIST("data[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 40.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 40.0;
		LEVEL Z FOR 210.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 600.0;
	}
}

TRANSITION_LIST("data[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 40.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 40.0;
		LEVEL Z FOR 210.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 600.0;
	}
}

TRANSITION_LIST("data[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 40.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 40.0;
		LEVEL Z FOR 210.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 600.0;
	}
}

TRANSITION_LIST("addr[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 50.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
	}
}

TRANSITION_LIST("addr[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30.0;
			NODE
			{
				REPEAT = 5;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
	}
}

TRANSITION_LIST("addr[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 10;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 11;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 15;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("set")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 245.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 535.0;
	}
}

TRANSITION_LIST("reset")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 50.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("enableWrite")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 170.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 500.0;
	}
}

TRANSITION_LIST("ClearCounter")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 245.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 535.0;
	}
}

TRANSITION_LIST("sizeOfBuffer[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("sizeOfBuffer[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("sizeOfBuffer[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("read/write")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 110.0;
		LEVEL 0 FOR 540.0;
	}
}

TRANSITION_LIST("buf0[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("buf0[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("buf0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("buf0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("buf0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("buf0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 790.0;
	}
}

TRANSITION_LIST("buf0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 540.0;
	}
}

TRANSITION_LIST("buf0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 540.0;
	}
}

TRANSITION_LIST("buf1[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 210.0;
		LEVEL 0 FOR 780.0;
	}
}

TRANSITION_LIST("buf1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 210.0;
		LEVEL 0 FOR 780.0;
	}
}

TRANSITION_LIST("buf1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 210.0;
		LEVEL 0 FOR 780.0;
	}
}

TRANSITION_LIST("buf1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 210.0;
		LEVEL 0 FOR 780.0;
	}
}

TRANSITION_LIST("buf1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 210.0;
		LEVEL 0 FOR 780.0;
	}
}

TRANSITION_LIST("buf1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 210.0;
		LEVEL 1 FOR 780.0;
	}
}

TRANSITION_LIST("buf1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 210.0;
		LEVEL 0 FOR 780.0;
	}
}

TRANSITION_LIST("buf1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 210.0;
		LEVEL 1 FOR 780.0;
	}
}

TRANSITION_LIST("buf2[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 210.0;
		LEVEL 0 FOR 770.0;
	}
}

TRANSITION_LIST("buf2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 210.0;
		LEVEL 0 FOR 770.0;
	}
}

TRANSITION_LIST("buf2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 210.0;
		LEVEL 0 FOR 770.0;
	}
}

TRANSITION_LIST("buf2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 210.0;
		LEVEL 0 FOR 770.0;
	}
}

TRANSITION_LIST("buf2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 210.0;
		LEVEL 0 FOR 770.0;
	}
}

TRANSITION_LIST("buf2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 210.0;
		LEVEL 1 FOR 770.0;
	}
}

TRANSITION_LIST("buf2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 210.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 520.0;
	}
}

TRANSITION_LIST("buf2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 210.0;
		LEVEL 1 FOR 770.0;
	}
}

TRANSITION_LIST("addr_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("addr_out[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("addr_out[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 45;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
	}
}

TRANSITION_LIST("reset_to_Z")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 70.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "inputData";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5, 6, 7, 8, 9;
}

DISPLAY_LINE
{
	CHANNEL = "inputData[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "inputData[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "inputData[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "inputData[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "inputData[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "inputData[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "inputData[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "inputData[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "sizeOfBuffer";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
	CHILDREN = 11, 12, 13;
}

DISPLAY_LINE
{
	CHANNEL = "sizeOfBuffer[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "sizeOfBuffer[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "sizeOfBuffer[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "read/write";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
	CHILDREN = 16, 17, 18, 19, 20, 21, 22, 23;
}

DISPLAY_LINE
{
	CHANNEL = "data[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "data[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "data[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "data[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "data[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "data[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "data[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "data[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "buf0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 24;
	TREE_LEVEL = 0;
	CHILDREN = 25, 26, 27, 28, 29, 30, 31, 32;
}

DISPLAY_LINE
{
	CHANNEL = "buf0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "buf0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "buf0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "buf0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "buf0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "buf0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "buf0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "buf0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "buf1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 33;
	TREE_LEVEL = 0;
	CHILDREN = 34, 35, 36, 37, 38, 39, 40, 41;
}

DISPLAY_LINE
{
	CHANNEL = "buf1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "buf1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "buf1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "buf1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "buf1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "buf1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "buf1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "buf1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "buf2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 42;
	TREE_LEVEL = 0;
	CHILDREN = 43, 44, 45, 46, 47, 48, 49, 50;
}

DISPLAY_LINE
{
	CHANNEL = "buf2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "buf2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "buf2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "buf2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "buf2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "buf2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "buf2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "buf2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "addr";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 51;
	TREE_LEVEL = 0;
	CHILDREN = 52, 53, 54;
}

DISPLAY_LINE
{
	CHANNEL = "addr[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 51;
}

DISPLAY_LINE
{
	CHANNEL = "addr[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 51;
}

DISPLAY_LINE
{
	CHANNEL = "addr[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 51;
}

DISPLAY_LINE
{
	CHANNEL = "addr_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 55;
	TREE_LEVEL = 0;
	CHILDREN = 56, 57, 58;
}

DISPLAY_LINE
{
	CHANNEL = "addr_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "addr_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "addr_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "ClearCounter";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 59;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "reset_to_Z";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 60;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "enableWrite";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 61;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "set";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 62;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 63;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 22700;
	MASTER = TRUE;
}
;
